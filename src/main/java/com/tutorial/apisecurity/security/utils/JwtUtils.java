package com.tutorial.apisecurity.security.utils;

import java.util.Date;

import com.auth0.jwt.JWT;
import com.auth0.jwt.algorithms.Algorithm;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public final class JwtUtils {
   private static String secret = "mysecret";
   
   /**
    * Returns a new JWT given a username
    * 
    * @param username
    * @return
    */
   public static String generateToken(String username) {

      String token = JWT.create().withSubject(username).withExpiresAt(new Date(System.currentTimeMillis() + 180000))
            .sign(Algorithm.HMAC512(secret.getBytes()));
      return token;
   }

   /**
    * Parse the username from the given JWT. Only works on JWT generated by this class.
    *
    * @param token JWT to parse
    * @return Username
    */
   public static String getUsernameFromToken(String token) {
      return JWT.require(Algorithm.HMAC512(secret)).build().verify(token).getSubject();
   }

   public static boolean checkToken(String token) {
      try {
         JWT.require(Algorithm.HMAC512(secret)).build().verify(token);
         return true;
      } catch (Exception e) {
         log.error(e.getMessage());
      }
      return false;
   }
}
